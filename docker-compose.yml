version: '3.8'

services:
  # Bootstrap node
  node1:
    build: .
    container_name: adx-node-1
    hostname: node1
    ports:
      - "8000:8000"  # HTTP
      - "9000:9000"  # RPC
      - "10000:10000" # P2P
    environment:
      - NODE_ID=node-1
      - NODE_TYPE=bootstrap
      - IS_MINER=true
      - TEE_MODE=simulated
      - LOG_LEVEL=info
    volumes:
      - ./data/node1:/data
    networks:
      adx-network:
        ipv4_address: 172.20.0.10
    command: >
      /app/adx-node
      --data-dir=/data
      --node-id=node-1
      --port=8000
      --rpc-port=9000
      --p2p-port=10000
      --network-id=adx-docker
      --bootstrap
      --miner
      --tee-mode=simulated

  # Regular nodes
  node2:
    build: .
    container_name: adx-node-2
    hostname: node2
    ports:
      - "8001:8000"
      - "9001:9000"
      - "10001:10000"
    environment:
      - NODE_ID=node-2
      - BOOTSTRAP_NODES=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      - TEE_MODE=simulated
    volumes:
      - ./data/node2:/data
    networks:
      adx-network:
        ipv4_address: 172.20.0.11
    depends_on:
      - node1
    command: >
      /app/adx-node
      --data-dir=/data
      --node-id=node-2
      --port=8000
      --rpc-port=9000
      --p2p-port=10000
      --network-id=adx-docker
      --bootstrap-nodes=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      --tee-mode=simulated

  node3:
    build: .
    container_name: adx-node-3
    hostname: node3
    ports:
      - "8002:8000"
      - "9002:9000"
      - "10002:10000"
    environment:
      - NODE_ID=node-3
      - BOOTSTRAP_NODES=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      - IS_MINER=true
      - TEE_MODE=simulated
    volumes:
      - ./data/node3:/data
    networks:
      adx-network:
        ipv4_address: 172.20.0.12
    depends_on:
      - node1
    command: >
      /app/adx-node
      --data-dir=/data
      --node-id=node-3
      --port=8000
      --rpc-port=9000
      --p2p-port=10000
      --network-id=adx-docker
      --bootstrap-nodes=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      --miner
      --tee-mode=simulated

  node4:
    build: .
    container_name: adx-node-4
    hostname: node4
    ports:
      - "8003:8000"
      - "9003:9000"
      - "10003:10000"
    environment:
      - NODE_ID=node-4
      - BOOTSTRAP_NODES=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      - TEE_MODE=sgx
    volumes:
      - ./data/node4:/data
    networks:
      adx-network:
        ipv4_address: 172.20.0.13
    depends_on:
      - node1
    command: >
      /app/adx-node
      --data-dir=/data
      --node-id=node-4
      --port=8000
      --rpc-port=9000
      --p2p-port=10000
      --network-id=adx-docker
      --bootstrap-nodes=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      --tee-mode=sgx

  node5:
    build: .
    container_name: adx-node-5
    hostname: node5
    ports:
      - "8004:8000"
      - "9004:9000"
      - "10004:10000"
    environment:
      - NODE_ID=node-5
      - BOOTSTRAP_NODES=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      - TEE_MODE=simulated
    volumes:
      - ./data/node5:/data
    networks:
      adx-network:
        ipv4_address: 172.20.0.14
    depends_on:
      - node1
    command: >
      /app/adx-node
      --data-dir=/data
      --node-id=node-5
      --port=8000
      --rpc-port=9000
      --p2p-port=10000
      --network-id=adx-docker
      --bootstrap-nodes=/ip4/172.20.0.10/tcp/10000/p2p/node-1
      --tee-mode=simulated

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: adx-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - adx-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: adx-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    networks:
      - adx-network
    depends_on:
      - prometheus

networks:
  adx-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
  grafana-data: